service: be
package:
  individually: true
  patterns:
    - '!node_modules/**'
    - '!venv/**'
provider:
  name: aws
  profile: ${opt:aws-profile, "ntuscse"}
  region: "ap-southeast-1"
  stage: ${opt:stage, "dev"}
  runtime: python3.9
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:DescribeTable
      Resource: "*"
  environment:
    PRODUCT_CATEGORIES_TABLE_NAME: ${self:custom.tableNames.productCategoriesTableName}

plugins:
  - serverless-dynamodb-local
  - serverless-python-requirements
  - serverless-lift
  - serverless-offline # serverless-offline needs to be last in the list

custom:
  pythonRequirements:
    dockerizePip: false
    usePoetry: true
  serverless-offline:
    allowCache: true
    useChildProcesses: true
    httpPort: 4000
  tableNames:
    productCategoriesTableName: 'productCategoriesTable-${self:provider.stage}'
  dynamodb:
    stages:
      - dev
    start:
      migrate: true
      port: 8011
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      seed: true
      convertEmptyValues: true

functions:
  root:
    handler: be.root.handler
    environment:
      STAGE: ${self:provider.stage}
    events:
      - http:
          method: get
          path: /

  docs:
    handler: be.docs.handler
    environment:
      STAGE: ${self:provider.stage}
    events:
      - http:
          path: /docs
          method: ANY
          private: false
      - http:
          path: /openapi.json
          method: ANY
          private: false
      - http:
          path: /redoc
          method: ANY
          private: false

  getUsers:
    handler: be.api.v1.endpoints.users.get.handler
    environment:
      STAGE: ${self:provider.stage}
    events:
      - http:
          method: get
          path: /users
      - http:
          method: get
          path: /users/{proxy+}

  getProducts:
    handler: be.api.v1.endpoints.products.get.handler
    environment:
      STAGE: ${self:provider.stage}
    events:
      - http:
          method: get
          path: /products
      - http:
          method: get
          path: /products/{proxy+}

  getProductCategories:
    handler: be.api.v1.endpoints.product_categories.get.handler
    environment:
      STAGE: ${self:provider.stage}
      
    events:
      - http:
          method: get
          path: /product-categories
      - http:
          method: get
          path: /product-categories/{proxy+}

  postProductCategories:
    handler: be.api.v1.endpoints.product_categories.post.handler
    environment:
      STAGE: ${self:provider.stage}
      
    events:
      - http:
          method: post
          path: /product-categories

constructs:
  myTable:
    type: database/dynamodb-single-table


resources:
  Resources:
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        # Generate a name based on the stage
        UserPoolName: ${self:provider.stage}-user-pool
        # Set email as an alias
        UsernameAttributes:
          - email
        AutoVerifiedAttributes:
          - email

    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        # Generate an app client name based on the stage
        ClientName: ${self:provider.stage}-user-pool-client
        UserPoolId:
          Ref: CognitoUserPool
        GenerateSecret: true
        AllowedOAuthFlows: 
          - code
        AllowedOAuthScopes: 
          - email
          - openid
        CallbackURLs:
          - https://google.com

    productCategoriesTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: ${self:provider.environment.PRODUCT_CATEGORIES_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
