# sls deploy --stage dev

name: Deploy (dev)

on:
  push:
    branches:
      - main
      - feat/deploy-to-dev
  workflow_dispatch:

permissions:
  id-token: write # allows writing openid token for aws

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  deploy-dev:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
          architecture: "x64"

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          virtualenvs-path: ./poetry_virtualenv
          installer-parallel: true

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Install dependencies
        run: npm run setup:cd

      - name: Setup Serverless
        run: |
          npm i -g serverless
          serverless config credentials --provider aws --key $AWS_ACCESS_KEY_ID --secret $AWS_SECRET_ACCESS_KEY --profile github_actions

      - name: Debug AWS
        run: |
          echo $(aws sts get-caller-identity)
          aws configure list
          aws configure list --profile github_actions
          export AWS_PROFILE=github_actions
          echo $(aws sts get-caller-identity)
          echo $(aws lambda list-functions)
          ls

      - name: Deploy to AWS
        run: |
#          serverless package --package serverless-artifacts
          npm run deploy -- --stage dev --aws-profile github_actions

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: serverless-artifacts
          path: ./serverless